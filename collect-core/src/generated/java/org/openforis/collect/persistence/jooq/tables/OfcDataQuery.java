/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcDataQueryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcDataQuery extends TableImpl<OfcDataQueryRecord> {

	private static final long serialVersionUID = 1477283802;

	/**
	 * The reference instance of <code>collect.ofc_data_query</code>
	 */
	public static final OfcDataQuery OFC_DATA_QUERY = new OfcDataQuery();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcDataQueryRecord> getRecordType() {
		return OfcDataQueryRecord.class;
	}

	/**
	 * The column <code>collect.ofc_data_query.id</code>.
	 */
	public final TableField<OfcDataQueryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_query.uuid</code>.
	 */
	public final TableField<OfcDataQueryRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>collect.ofc_data_query.survey_id</code>.
	 */
	public final TableField<OfcDataQueryRecord, Integer> SURVEY_ID = createField("survey_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_query.title</code>.
	 */
	public final TableField<OfcDataQueryRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_query.description</code>.
	 */
	public final TableField<OfcDataQueryRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_data_query.creation_date</code>.
	 */
	public final TableField<OfcDataQueryRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_data_query.modified_date</code>.
	 */
	public final TableField<OfcDataQueryRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_data_query.entity_id</code>.
	 */
	public final TableField<OfcDataQueryRecord, Integer> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_query.attribute_id</code>.
	 */
	public final TableField<OfcDataQueryRecord, Integer> ATTRIBUTE_ID = createField("attribute_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_query.conditions</code>.
	 */
	public final TableField<OfcDataQueryRecord, String> CONDITIONS = createField("conditions", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>collect.ofc_data_query.type_id</code>.
	 */
	public final TableField<OfcDataQueryRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_data_query.severity</code>.
	 */
	public final TableField<OfcDataQueryRecord, String> SEVERITY = createField("severity", org.jooq.impl.SQLDataType.CHAR.length(1).defaulted(true), this, "");

	/**
	 * Create a <code>collect.ofc_data_query</code> table reference
	 */
	public OfcDataQuery() {
		this("ofc_data_query", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_data_query</code> table reference
	 */
	public OfcDataQuery(String alias) {
		this(alias, OFC_DATA_QUERY);
	}

	private OfcDataQuery(String alias, Table<OfcDataQueryRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcDataQuery(String alias, Table<OfcDataQueryRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcDataQueryRecord> getPrimaryKey() {
		return Keys.OFC_DATA_QUERY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcDataQueryRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcDataQueryRecord>>asList(Keys.OFC_DATA_QUERY_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OfcDataQueryRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OfcDataQueryRecord, ?>>asList(Keys.OFC_DATA_QUERY__OFC_DATA_QUERY_SURVEY_FKEY, Keys.OFC_DATA_QUERY__OFC_DATA_QUERY_TYPE_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcDataQuery as(String alias) {
		return new OfcDataQuery(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcDataQuery rename(String name) {
		return new OfcDataQuery(name, null);
	}
}
