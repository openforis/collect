/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables.records;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;
import org.openforis.collect.persistence.jooq.tables.OfcMessageProcessing;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcMessageProcessingRecord extends TableRecordImpl<OfcMessageProcessingRecord> implements Record8<String, String, String, String, Timestamp, Timestamp, Integer, String> {

	private static final long serialVersionUID = -1583631422;

	/**
	 * Setter for <code>collect.ofc_message_processing.message_id</code>.
	 */
	public void setMessageId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.message_id</code>.
	 */
	public String getMessageId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.consumer_id</code>.
	 */
	public void setConsumerId(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.consumer_id</code>.
	 */
	public String getConsumerId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.version_id</code>.
	 */
	public void setVersionId(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.version_id</code>.
	 */
	public String getVersionId() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.state</code>.
	 */
	public void setState(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.state</code>.
	 */
	public String getState() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.last_updated</code>.
	 */
	public void setLastUpdated(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.last_updated</code>.
	 */
	public Timestamp getLastUpdated() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.times_out</code>.
	 */
	public void setTimesOut(Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.times_out</code>.
	 */
	public Timestamp getTimesOut() {
		return (Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.retries</code>.
	 */
	public void setRetries(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.retries</code>.
	 */
	public Integer getRetries() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>collect.ofc_message_processing.error_message</code>.
	 */
	public void setErrorMessage(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>collect.ofc_message_processing.error_message</code>.
	 */
	public String getErrorMessage() {
		return (String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<String, String, String, String, Timestamp, Timestamp, Integer, String> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<String, String, String, String, Timestamp, Timestamp, Integer, String> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.MESSAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.CONSUMER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.VERSION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.LAST_UPDATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.TIMES_OUT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.RETRIES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return OfcMessageProcessing.OFC_MESSAGE_PROCESSING.ERROR_MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getMessageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getConsumerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getVersionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getLastUpdated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getTimesOut();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getRetries();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getErrorMessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value1(String value) {
		setMessageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value2(String value) {
		setConsumerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value3(String value) {
		setVersionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value4(String value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value5(Timestamp value) {
		setLastUpdated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value6(Timestamp value) {
		setTimesOut(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value7(Integer value) {
		setRetries(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord value8(String value) {
		setErrorMessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageProcessingRecord values(String value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6, Integer value7, String value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OfcMessageProcessingRecord
	 */
	public OfcMessageProcessingRecord() {
		super(OfcMessageProcessing.OFC_MESSAGE_PROCESSING);
	}

	/**
	 * Create a detached, initialised OfcMessageProcessingRecord
	 */
	public OfcMessageProcessingRecord(String messageId, String consumerId, String versionId, String state, Timestamp lastUpdated, Timestamp timesOut, Integer retries, String errorMessage) {
		super(OfcMessageProcessing.OFC_MESSAGE_PROCESSING);

		setValue(0, messageId);
		setValue(1, consumerId);
		setValue(2, versionId);
		setValue(3, state);
		setValue(4, lastUpdated);
		setValue(5, timesOut);
		setValue(6, retries);
		setValue(7, errorMessage);
	}
}
