/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.tables.records.OfcApplicationInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcApplicationInfo extends TableImpl<OfcApplicationInfoRecord> {

	private static final long serialVersionUID = -460768993;

	/**
	 * The reference instance of <code>collect.ofc_application_info</code>
	 */
	public static final OfcApplicationInfo OFC_APPLICATION_INFO = new OfcApplicationInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcApplicationInfoRecord> getRecordType() {
		return OfcApplicationInfoRecord.class;
	}

	/**
	 * The column <code>collect.ofc_application_info.version</code>.
	 */
	public final TableField<OfcApplicationInfoRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

	/**
	 * Create a <code>collect.ofc_application_info</code> table reference
	 */
	public OfcApplicationInfo() {
		this("ofc_application_info", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_application_info</code> table reference
	 */
	public OfcApplicationInfo(String alias) {
		this(alias, OFC_APPLICATION_INFO);
	}

	private OfcApplicationInfo(String alias, Table<OfcApplicationInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcApplicationInfo(String alias, Table<OfcApplicationInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcApplicationInfo as(String alias) {
		return new OfcApplicationInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcApplicationInfo rename(String name) {
		return new OfcApplicationInfo(name, null);
	}
}
