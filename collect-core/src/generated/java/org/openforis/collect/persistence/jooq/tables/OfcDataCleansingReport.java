/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcDataCleansingReportRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcDataCleansingReport extends TableImpl<OfcDataCleansingReportRecord> {

	private static final long serialVersionUID = 1580338053;

	/**
	 * The reference instance of <code>collect.ofc_data_cleansing_report</code>
	 */
	public static final OfcDataCleansingReport OFC_DATA_CLEANSING_REPORT = new OfcDataCleansingReport();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcDataCleansingReportRecord> getRecordType() {
		return OfcDataCleansingReportRecord.class;
	}

	/**
	 * The column <code>collect.ofc_data_cleansing_report.id</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.uuid</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.cleansing_chain_id</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> CLEANSING_CHAIN_ID = createField("cleansing_chain_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.record_step</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> RECORD_STEP = createField("record_step", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.dataset_size</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> DATASET_SIZE = createField("dataset_size", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.last_record_modified_date</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Timestamp> LAST_RECORD_MODIFIED_DATE = createField("last_record_modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.cleansed_records</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> CLEANSED_RECORDS = createField("cleansed_records", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.cleansed_nodes</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Integer> CLEANSED_NODES = createField("cleansed_nodes", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.creation_date</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_data_cleansing_report.modified_date</code>.
	 */
	public final TableField<OfcDataCleansingReportRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>collect.ofc_data_cleansing_report</code> table reference
	 */
	public OfcDataCleansingReport() {
		this("ofc_data_cleansing_report", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_data_cleansing_report</code> table reference
	 */
	public OfcDataCleansingReport(String alias) {
		this(alias, OFC_DATA_CLEANSING_REPORT);
	}

	private OfcDataCleansingReport(String alias, Table<OfcDataCleansingReportRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcDataCleansingReport(String alias, Table<OfcDataCleansingReportRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcDataCleansingReportRecord> getPrimaryKey() {
		return Keys.OFC_DATA_CLEANSING_REPORT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcDataCleansingReportRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcDataCleansingReportRecord>>asList(Keys.OFC_DATA_CLEANSING_REPORT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OfcDataCleansingReportRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OfcDataCleansingReportRecord, ?>>asList(Keys.OFC_DATA_CLEANSING_REPORT__OFC_DATA_CLEANSING_CHAIN_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcDataCleansingReport as(String alias) {
		return new OfcDataCleansingReport(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcDataCleansingReport rename(String name) {
		return new OfcDataCleansingReport(name, null);
	}
}
