/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcLogoRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcLogo extends TableImpl<OfcLogoRecord> {

	private static final long serialVersionUID = 90322409;

	/**
	 * The reference instance of <code>collect.ofc_logo</code>
	 */
	public static final OfcLogo OFC_LOGO = new OfcLogo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcLogoRecord> getRecordType() {
		return OfcLogoRecord.class;
	}

	/**
	 * The column <code>collect.ofc_logo.pos</code>.
	 */
	public final TableField<OfcLogoRecord, Integer> POS = createField("pos", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_logo.image</code>.
	 */
	public final TableField<OfcLogoRecord, byte[]> IMAGE = createField("image", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * Create a <code>collect.ofc_logo</code> table reference
	 */
	public OfcLogo() {
		this("ofc_logo", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_logo</code> table reference
	 */
	public OfcLogo(String alias) {
		this(alias, OFC_LOGO);
	}

	private OfcLogo(String alias, Table<OfcLogoRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcLogo(String alias, Table<OfcLogoRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcLogoRecord> getPrimaryKey() {
		return Keys.OFC_LOGO_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcLogoRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcLogoRecord>>asList(Keys.OFC_LOGO_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcLogo as(String alias) {
		return new OfcLogo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcLogo rename(String name) {
		return new OfcLogo(name, null);
	}
}
