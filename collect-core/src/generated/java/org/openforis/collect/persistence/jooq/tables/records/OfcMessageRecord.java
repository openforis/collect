/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables.records;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.openforis.collect.persistence.jooq.tables.OfcMessage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcMessageRecord extends UpdatableRecordImpl<OfcMessageRecord> implements Record6<String, Integer, Timestamp, String, String, byte[]> {

	private static final long serialVersionUID = 1114796717;

	/**
	 * Setter for <code>collect.ofc_message.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>collect.ofc_message.sequence_no</code>.
	 */
	public void setSequenceNo(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.sequence_no</code>.
	 */
	public Integer getSequenceNo() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>collect.ofc_message.publication_time</code>.
	 */
	public void setPublicationTime(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.publication_time</code>.
	 */
	public Timestamp getPublicationTime() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>collect.ofc_message.queue_id</code>.
	 */
	public void setQueueId(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.queue_id</code>.
	 */
	public String getQueueId() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>collect.ofc_message.message_string</code>.
	 */
	public void setMessageString(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.message_string</code>.
	 */
	public String getMessageString() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>collect.ofc_message.message_bytes</code>.
	 */
	public void setMessageBytes(byte[] value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>collect.ofc_message.message_bytes</code>.
	 */
	public byte[] getMessageBytes() {
		return (byte[]) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Integer, Timestamp, String, String, byte[]> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Integer, Timestamp, String, String, byte[]> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return OfcMessage.OFC_MESSAGE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return OfcMessage.OFC_MESSAGE.SEQUENCE_NO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return OfcMessage.OFC_MESSAGE.PUBLICATION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return OfcMessage.OFC_MESSAGE.QUEUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return OfcMessage.OFC_MESSAGE.MESSAGE_STRING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field6() {
		return OfcMessage.OFC_MESSAGE.MESSAGE_BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getSequenceNo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getPublicationTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getQueueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getMessageString();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value6() {
		return getMessageBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value2(Integer value) {
		setSequenceNo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value3(Timestamp value) {
		setPublicationTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value4(String value) {
		setQueueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value5(String value) {
		setMessageString(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord value6(byte[] value) {
		setMessageBytes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcMessageRecord values(String value1, Integer value2, Timestamp value3, String value4, String value5, byte[] value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OfcMessageRecord
	 */
	public OfcMessageRecord() {
		super(OfcMessage.OFC_MESSAGE);
	}

	/**
	 * Create a detached, initialised OfcMessageRecord
	 */
	public OfcMessageRecord(String id, Integer sequenceNo, Timestamp publicationTime, String queueId, String messageString, byte[] messageBytes) {
		super(OfcMessage.OFC_MESSAGE);

		setValue(0, id);
		setValue(1, sequenceNo);
		setValue(2, publicationTime);
		setValue(3, queueId);
		setValue(4, messageString);
		setValue(5, messageBytes);
	}
}
