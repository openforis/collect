/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.collect.persistence.jooq.tables.OfcUserRole;
import org.openforis.collect.persistence.jooq.tables.records.OfcUserRoleRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcUserRoleDao extends DAOImpl<OfcUserRoleRecord, org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole, Integer> {

	/**
	 * Create a new OfcUserRoleDao without any configuration
	 */
	public OfcUserRoleDao() {
		super(OfcUserRole.OFC_USER_ROLE, org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole.class);
	}

	/**
	 * Create a new OfcUserRoleDao with an attached configuration
	 */
	public OfcUserRoleDao(Configuration configuration) {
		super(OfcUserRole.OFC_USER_ROLE, org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole> fetchById(Integer... values) {
		return fetch(OfcUserRole.OFC_USER_ROLE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole fetchOneById(Integer value) {
		return fetchOne(OfcUserRole.OFC_USER_ROLE.ID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole> fetchByUserId(Integer... values) {
		return fetch(OfcUserRole.OFC_USER_ROLE.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>role IN (values)</code>
	 */
	public List<org.openforis.collect.persistence.jooq.tables.pojos.OfcUserRole> fetchByRole(String... values) {
		return fetch(OfcUserRole.OFC_USER_ROLE.ROLE, values);
	}
}
