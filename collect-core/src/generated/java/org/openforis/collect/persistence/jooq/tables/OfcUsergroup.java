/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcUsergroupRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcUsergroup extends TableImpl<OfcUsergroupRecord> {

	private static final long serialVersionUID = 1875477144;

	/**
	 * The reference instance of <code>collect.ofc_usergroup</code>
	 */
	public static final OfcUsergroup OFC_USERGROUP = new OfcUsergroup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcUsergroupRecord> getRecordType() {
		return OfcUsergroupRecord.class;
	}

	/**
	 * The column <code>collect.ofc_usergroup.id</code>.
	 */
	public final TableField<OfcUsergroupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.parent_id</code>.
	 */
	public final TableField<OfcUsergroupRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_usergroup.name</code>.
	 */
	public final TableField<OfcUsergroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.label</code>.
	 */
	public final TableField<OfcUsergroupRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR.length(127).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.description</code>.
	 */
	public final TableField<OfcUsergroupRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.created_by</code>.
	 */
	public final TableField<OfcUsergroupRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.creation_date</code>.
	 */
	public final TableField<OfcUsergroupRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.visibility_code</code>. P=Public, N=Private
	 */
	public final TableField<OfcUsergroupRecord, String> VISIBILITY_CODE = createField("visibility_code", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "P=Public, N=Private");

	/**
	 * The column <code>collect.ofc_usergroup.enabled</code>.
	 */
	public final TableField<OfcUsergroupRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.system_defined</code>.
	 */
	public final TableField<OfcUsergroupRecord, Boolean> SYSTEM_DEFINED = createField("system_defined", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.qualifier1_name</code>.
	 */
	public final TableField<OfcUsergroupRecord, String> QUALIFIER1_NAME = createField("qualifier1_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_usergroup.qualifier1_value</code>.
	 */
	public final TableField<OfcUsergroupRecord, String> QUALIFIER1_VALUE = createField("qualifier1_value", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>collect.ofc_usergroup</code> table reference
	 */
	public OfcUsergroup() {
		this("ofc_usergroup", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_usergroup</code> table reference
	 */
	public OfcUsergroup(String alias) {
		this(alias, OFC_USERGROUP);
	}

	private OfcUsergroup(String alias, Table<OfcUsergroupRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcUsergroup(String alias, Table<OfcUsergroupRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcUsergroupRecord> getPrimaryKey() {
		return Keys.OFC_USERGROUP_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcUsergroupRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcUsergroupRecord>>asList(Keys.OFC_USERGROUP_PKEY, Keys.OFC_USERGROUP_NAME_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OfcUsergroupRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OfcUsergroupRecord, ?>>asList(Keys.OFC_USERGROUP__OFC_USERGROUP_PARENT_FKEY, Keys.OFC_USERGROUP__OFC_USERGROUP_CREATED_BY_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcUsergroup as(String alias) {
		return new OfcUsergroup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcUsergroup rename(String name) {
		return new OfcUsergroup(name, null);
	}
}
