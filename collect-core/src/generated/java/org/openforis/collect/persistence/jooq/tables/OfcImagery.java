/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcImageryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcImagery extends TableImpl<OfcImageryRecord> {

	private static final long serialVersionUID = 747495560;

	/**
	 * The reference instance of <code>collect.ofc_imagery</code>
	 */
	public static final OfcImagery OFC_IMAGERY = new OfcImagery();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcImageryRecord> getRecordType() {
		return OfcImageryRecord.class;
	}

	/**
	 * The column <code>collect.ofc_imagery.id</code>.
	 */
	public final TableField<OfcImageryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>collect.ofc_imagery.title</code>.
	 */
	public final TableField<OfcImageryRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_imagery.attribution</code>.
	 */
	public final TableField<OfcImageryRecord, String> ATTRIBUTION = createField("attribution", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_imagery.extent</code>.
	 */
	public final TableField<OfcImageryRecord, String> EXTENT = createField("extent", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_imagery.source_config</code>.
	 */
	public final TableField<OfcImageryRecord, String> SOURCE_CONFIG = createField("source_config", org.jooq.impl.SQLDataType.VARCHAR.length(2047).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_imagery.visibility</code>. N=Private, P=Public
	 */
	public final TableField<OfcImageryRecord, String> VISIBILITY = createField("visibility", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false).defaulted(true), this, "N=Private, P=Public");

	/**
	 * Create a <code>collect.ofc_imagery</code> table reference
	 */
	public OfcImagery() {
		this("ofc_imagery", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_imagery</code> table reference
	 */
	public OfcImagery(String alias) {
		this(alias, OFC_IMAGERY);
	}

	private OfcImagery(String alias, Table<OfcImageryRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcImagery(String alias, Table<OfcImageryRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OfcImageryRecord, Integer> getIdentity() {
		return Keys.IDENTITY_OFC_IMAGERY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcImageryRecord> getPrimaryKey() {
		return Keys.OFC_IMAGERY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcImageryRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcImageryRecord>>asList(Keys.OFC_IMAGERY_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcImagery as(String alias) {
		return new OfcImagery(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcImagery rename(String name) {
		return new OfcImagery(name, null);
	}
}
