/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.collect.persistence.jooq.Collect;
import org.openforis.collect.persistence.jooq.Keys;
import org.openforis.collect.persistence.jooq.tables.records.OfcRecordDataRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfcRecordData extends TableImpl<OfcRecordDataRecord> {

	private static final long serialVersionUID = -27759921;

	/**
	 * The reference instance of <code>collect.ofc_record_data</code>
	 */
	public static final OfcRecordData OFC_RECORD_DATA = new OfcRecordData();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfcRecordDataRecord> getRecordType() {
		return OfcRecordDataRecord.class;
	}

	/**
	 * The column <code>collect.ofc_record_data.record_id</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_record_data.seq_num</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> SEQ_NUM = createField("seq_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_record_data.step</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> STEP = createField("step", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_record_data.state</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>collect.ofc_record_data.date_created</code>.
	 */
	public final TableField<OfcRecordDataRecord, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_record_data.created_by</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.date_modified</code>.
	 */
	public final TableField<OfcRecordDataRecord, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>collect.ofc_record_data.modified_by</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.skipped</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> SKIPPED = createField("skipped", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.missing</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> MISSING = createField("missing", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.errors</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> ERRORS = createField("errors", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.warnings</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> WARNINGS = createField("warnings", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.count1</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> COUNT1 = createField("count1", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.count2</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> COUNT2 = createField("count2", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.count3</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> COUNT3 = createField("count3", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.count4</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> COUNT4 = createField("count4", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.count5</code>.
	 */
	public final TableField<OfcRecordDataRecord, Integer> COUNT5 = createField("count5", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>collect.ofc_record_data.data</code>.
	 */
	public final TableField<OfcRecordDataRecord, byte[]> DATA = createField("data", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_record_data.app_version</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> APP_VERSION = createField("app_version", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

	/**
	 * The column <code>collect.ofc_record_data.key1</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> KEY1 = createField("key1", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>collect.ofc_record_data.key2</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> KEY2 = createField("key2", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>collect.ofc_record_data.key3</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> KEY3 = createField("key3", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

	/**
	 * The column <code>collect.ofc_record_data.qualifier1</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> QUALIFIER1 = createField("qualifier1", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_record_data.qualifier2</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> QUALIFIER2 = createField("qualifier2", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_record_data.qualifier3</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> QUALIFIER3 = createField("qualifier3", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_record_data.summary1</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> SUMMARY1 = createField("summary1", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_record_data.summary2</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> SUMMARY2 = createField("summary2", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>collect.ofc_record_data.summary3</code>.
	 */
	public final TableField<OfcRecordDataRecord, String> SUMMARY3 = createField("summary3", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>collect.ofc_record_data</code> table reference
	 */
	public OfcRecordData() {
		this("ofc_record_data", null);
	}

	/**
	 * Create an aliased <code>collect.ofc_record_data</code> table reference
	 */
	public OfcRecordData(String alias) {
		this(alias, OFC_RECORD_DATA);
	}

	private OfcRecordData(String alias, Table<OfcRecordDataRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfcRecordData(String alias, Table<OfcRecordDataRecord> aliased, Field<?>[] parameters) {
		super(alias, Collect.COLLECT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfcRecordDataRecord> getPrimaryKey() {
		return Keys.OFC_RECORD_DATA_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfcRecordDataRecord>> getKeys() {
		return Arrays.<UniqueKey<OfcRecordDataRecord>>asList(Keys.OFC_RECORD_DATA_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OfcRecordDataRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OfcRecordDataRecord, ?>>asList(Keys.OFC_RECORD_DATA__OFC_RECORD_DATA_RECORD_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfcRecordData as(String alias) {
		return new OfcRecordData(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfcRecordData rename(String name) {
		return new OfcRecordData(name, null);
	}
}
