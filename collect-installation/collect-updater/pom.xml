<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openforis.collect</groupId>
		<artifactId>collect-installation</artifactId>
		<version>4.0.45-SNAPSHOT</version>
	</parent>
	<artifactId>collect-updater</artifactId>
	<packaging>pom</packaging>
	<name>Open Foris Collect Updater</name>
	<description>Module to create the updaters for Open Foris Collect.</description>
	
	<properties>
		<!-- to avoid replacing relative path to images and other resources used by the installer -->
		<installer-build-path>${project.build.directory}/installer</installer-build-path>
		<installbuilder-updater-file-name>installbuilder-updater.xml</installbuilder-updater-file-name>
		<autoupdate-xml-file-name>update_3.xml</autoupdate-xml-file-name>
		<!-- updater file names -->
		<windows-updater-file-name>OpenForisCollectUpdater-${installer-version-id}-windows-installer.exe</windows-updater-file-name>
		<linux-updater-file-name>OpenForisCollectUpdater-${installer-version-id}-linux-installer.run</linux-updater-file-name>
		<linux-x64-updater-file-name>OpenForisCollectUpdater-${installer-version-id}-linux-x64-installer.run</linux-x64-updater-file-name>
		<osx-updater-file-name>OpenForisCollectUpdater-${installer-version-id}-osx-installer.dmg</osx-updater-file-name>
	</properties>

	<profiles>
		<profile>
			<id>installer</id>
			<build>
				<plugins>
					
					<!-- 1a. copy webapp war file and libraries -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-collect-webapp</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.openforis.collect</groupId>
											<artifactId>collect-webapp</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/</outputDirectory>
											<destFileName>collect.war</destFileName>
										</artifactItem>
										<!-- JDBC Libraries -->
										<artifactItem>
											<groupId>com.h2database</groupId>
											<artifactId>h2</artifactId>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>org.xerial</groupId>
											<artifactId>sqlite-jdbc</artifactId>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>org.postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-control-panel-libraries</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-build-path}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<!-- 1b. iterate over platforms and copy autoupdater -->
					<plugin>
						<groupId>com.soebes.maven.plugins</groupId>
						<artifactId>iterator-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-jre-autoupdater</id>
								<phase>process-sources</phase>
								<goals>
									<goal>iterator</goal>
								</goals>
								<configuration>
									<pluginExecutors>
										<!-- copy autoupdater artifacts -->
										<pluginExecutor>
											<plugin>
												<artifactId>maven-dependency-plugin</artifactId>
											</plugin>
											<goal>copy</goal>
											<configuration>
												<skip>${installer.skip}</skip>
												<artifactItems>
													<artifactItem>
														<groupId>org.openforis.collect</groupId>
														<artifactId>collect-autoupdater</artifactId>
														<version>${project.version}</version>
														<classifier>${installer.classifier}</classifier>
														<type>${installer.artifact.type}</type>
														<overWrite>false</overWrite>
														<outputDirectory>${installer-build-path}</outputDirectory>
														<destFileName>autoupdate-@item@.${installer.autoupdater.extension}</destFileName>
													</artifactItem>
												</artifactItems>
											</configuration>
										</pluginExecutor>
									</pluginExecutors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- 2. copy resource files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-installbuilder-source-file</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-build-path}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
												<include>**</include>
											 </includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
		
					<!-- 3. replace application version into the xml installbuilder source file -->
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<basedir>${installer-build-path}</basedir>
							<includes>
								<include>${installbuilder-updater-file-name}</include>
								<include>${autoupdate-xml-file-name}</include>
							</includes>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>PROJECT_VERSION</token>
									<value>${project.version}</value>
								</replacement>
								<replacement>
									<token>VERSION_ID</token>
									<value>${installer-version-id}</value>
								</replacement>
								<replacement>
									<token>VERSION</token>
									<value>${project.version}</value>
								</replacement>
								<replacement>
									<token>UPDATE_XML_URL</token>
									<value>${collect.update_3.url}</value> <!-- use latest update URL -->
								</replacement>
								<replacement>
									<token>NEXUS_URL</token>
									<value>${openforis.nexus.url}</value>
								</replacement>
							</replacements>
						</configuration>
					</plugin>
		
					<!-- 4. execute installbuilder to produce the installers -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- Linux -->
							<execution>
								<id>linux-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-updater-file-name}</argument>
										<argument>linux</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Linux -->
							<execution>
								<id>linux-x64-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-updater-file-name}</argument>
										<argument>linux-x64</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- Windows -->
							<execution>
								<id>windows-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-updater-file-name}</argument>
										<argument>windows</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- OS X -->
							<execution>
								<id>osx-installer</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>
									<arguments>
										<argument>build</argument>
										<argument>${installer-build-path}/${installbuilder-updater-file-name}</argument>
										<argument>osx</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<!--  5. move the installers into the target folder -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>run-ant-move-installers-into-build-directory</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<move file="${installbuilder.builder.output}/${windows-updater-file-name}" tofile="${project.build.directory}/${windows-updater-file-name}" failonerror="false" />
										<move file="${installbuilder.builder.output}/${linux-updater-file-name}" tofile="${project.build.directory}/${linux-updater-file-name}" failonerror="false" />
										<move file="${installbuilder.builder.output}/${linux-x64-updater-file-name}" tofile="${project.build.directory}/${linux-x64-updater-file-name}" failonerror="false" />
										<move file="${installbuilder.builder.output}/${osx-updater-file-name}" tofile="${project.build.directory}/${osx-updater-file-name}" failonerror="false" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
		
					<!-- 6. attach installers as artifact -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-installer-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/${windows-updater-file-name}</file>
											<classifier>windows</classifier>
											<type>exe</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${linux-updater-file-name}</file>
											<classifier>linux</classifier>
											<type>run</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${linux-x64-updater-file-name}</file>
											<classifier>linux-x64</classifier>
											<type>run</type>
										</artifact>
										<artifact>
											<file>${project.build.directory}/${osx-updater-file-name}</file>
											<classifier>osx</classifier>
											<type>dmg</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>		
		</profile>
		<profile>
			<id>publishupdater</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!-- 7 Upload the XML file that defines the presence of updates to the FTP directory -->
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<property name="host" value="${collect.autoupdater.ftp.host}" />
										<property name="username" value="${collect.autoupdater.ftp.username}" />
										<property name="password" value="${collect.autoupdater.ftp.password}" />
										<property name="remote_folder" value="${collect.autoupdater.ftp.remotefolder}" />
										<property name="local_folder" value="${installer-build-path}" />
										<property name="file_name" value="${autoupdate-xml-file-name}" />
										<ant antfile="${installer-build-path}/ant_ftp_upload.xml" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.jcraft</groupId>
								<artifactId>jsch</artifactId>
								<version>0.1.51</version>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.9.4</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>org.openforis.collect</groupId>
			<artifactId>collect-control-panel</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
