/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package org.openforis.collect.metamodel.proxy {
	
    [Bindable]
    [RemoteClass(alias="org.openforis.collect.metamodel.proxy.ModelVersionProxy")]
    public class ModelVersionProxy extends ModelVersionProxyBase {
		
		public function getLabelText(language:String="en"):String {
			if(labels == null || labels.length <=0){
				return "";
			} else if(labels.length == 1) {
				return LanguageSpecificTextProxy(labels.getItemAt(0)).text;
			} else {
				for each(var label:LanguageSpecificTextProxy in labels) {
					if(label.language == language) {
						return label.text;
					}
				}
			}
			return "";
		}

		public function compare(other:ModelVersionProxy):int {
			if(this.date == other.date){
				return 0;
			} else if (this.date < other.date){
				return -1;
			} else if(this.date > other.date){
				return 1;
			}
			return 0;
		}
		
		public function isApplicable(versionable:NodeDefinitionProxy):Boolean {
			var since:ModelVersionProxy = versionable.sinceVersion;
			var deprecated:ModelVersionProxy = versionable.deprecatedVersion;
			if (since == null && deprecated == null) {
				return true;
			} else {
				var sinceResult:int = 1;
				var deprecatedResult:int = -1;
				if (since != null) {
					sinceResult = date.localeCompare(since.date);
				}
				if (deprecated != null) {
					deprecatedResult = date.localeCompare(deprecated.date);
				}
				return sinceResult >= 0 && deprecatedResult < 0;
			}
		}
		
    }
}