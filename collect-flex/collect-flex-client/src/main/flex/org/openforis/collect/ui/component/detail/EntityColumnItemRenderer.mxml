<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true">
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			
			import org.openforis.collect.metamodel.proxy.AttributeDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.NodeDefinitionProxy;
			import org.openforis.collect.model.proxy.EntityProxy;
			import org.openforis.collect.ui.UIBuilder;

			
			private var _entityDefinition:EntityDefinitionProxy;
			private var _entity:EntityProxy;
			private var _nodeDefinition:AttributeDefinitionProxy;
			
			override public function prepare(hasBeenRecycled:Boolean):void {
				super.prepare(hasBeenRecycled);
			}
			
			override public function set data(value:Object):void {
				super.data = value;
				entity = value as EntityProxy;
			}
			
			override protected function createChildren():void {
				super.createChildren();
				if(data != null && column != null) {
					var formItem:CollectFormItem;
					if(nodeDefinition is AttributeDefinitionProxy) {
						var attributeDefn:AttributeDefinitionProxy = AttributeDefinitionProxy(data);
						formItem = UIBuilder.getAttributeFormItem(attributeDefn);
					} else if(nodeDefinition is EntityDefinitionProxy) {
						formItem = CollectFormItem(UIBuilder.getEntityFormItem(EntityDefinitionProxy(data)));
						//BindingUtils.bindProperty(formItem, "modelVersion", this, "modelVersion");
					}
					addElement(formItem);
					BindingUtils.bindProperty(formItem, "parentEntity", this, "entity");
				}
			}

			public function get entityDefinition():EntityDefinitionProxy
			{
				return _entityDefinition;
			}

			public function set entityDefinition(value:EntityDefinitionProxy):void
			{
				_entityDefinition = value;
			}
			
			[Bindable]
			public function get entity():EntityProxy {
				return _entity;
			}
			
			public function set entity(value:EntityProxy):void {
				_entity = value;
			}

			public function get nodeDefinition():AttributeDefinitionProxy
			{
				return _nodeDefinition;
			}

			public function set nodeDefinition(value:AttributeDefinitionProxy):void
			{
				_nodeDefinition = value;
				
				removeAllElements();
				initialized = false;
				initialize();
			}
			

		]]>
	</fx:Script>
	
</s:GridItemRenderer>
