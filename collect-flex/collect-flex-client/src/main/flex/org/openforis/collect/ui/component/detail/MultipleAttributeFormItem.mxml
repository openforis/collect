<?xml version="1.0" encoding="utf-8"?>
<detail:AttributeFormItem xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:detail="org.openforis.collect.ui.component.detail.*"
		 xmlns:input="org.openforis.collect.ui.component.input.*" xmlns:datagroup="org.openforis.collect.ui.component.datagroup.*"
		 >

	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			
			import org.openforis.collect.Application;
			import org.openforis.collect.event.EventDispatcherFactory;
			import org.openforis.collect.event.NodeEvent;
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.model.proxy.AttributeProxy;
			import org.openforis.collect.presenter.MultipleAttributeFormItemPresenter;
			import org.openforis.collect.ui.Images;
			
			import spark.components.supportClasses.ItemRenderer;
			
			override protected function initPresenter():void {
				presenter = new MultipleAttributeFormItemPresenter(this);
			}
			
		]]>
	</fx:Script>
	
	<s:BorderContainer id="border" 
					   height="100%" 
					   width="100%"
					   minHeight="0"
					   minWidth="0">
		<s:layout>
			<s:HorizontalLayout gap="0" />
		</s:layout>
		
		<detail:FormItemLabel id="formItemLabel"
						  nodeDefinition="{attributeDefinition}" 
						  width="{labelWidth}"
						  />
		
		<s:VGroup gap="2">
			<s:DataGroup id="dataGroup">
				<s:layout>
					<s:VerticalLayout gap="2" />
				</s:layout>
				<s:itemRenderer>
					<fx:Component>
						<datagroup:MultipleNodesDataGroupItemRenderer
							dragEnabled="{Application.activeRecordEditable}"
							>
							<datagroup:layout>
								<s:HorizontalLayout gap="2" />
							</datagroup:layout>
							<fx:Script>
								<![CDATA[
									import mx.binding.utils.BindingUtils;
									import mx.core.UIComponent;
									import mx.events.FlexEvent;
									
									import org.openforis.collect.Application;
									import org.openforis.collect.model.proxy.AttributeProxy;
									import org.openforis.collect.ui.UIBuilder;
									import org.openforis.collect.ui.component.input.InputField;
									
									import spark.components.Button;
									import spark.components.Group;
									import spark.components.SkinnableContainer;
									
									[Bindable(event="dataChange")]
									public function get attribute():AttributeProxy {
										return super.data as AttributeProxy;
									}
									
									override protected function createChildren():void {
										super.createChildren();
										
										var renderer:AttributeItemRenderer = UIBuilder.getAttributeItemRenderer(outerDocument.attributeDefinition);
										BindingUtils.bindProperty(renderer, "parentEntity", outerDocument, "parentEntity");
										BindingUtils.bindProperty(renderer, "attribute", this, "attribute");
										contentGroup.addElement(renderer);
									}
								]]>
							</fx:Script>
						</datagroup:MultipleNodesDataGroupItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:DataGroup>
			
			<mx:LinkButton
				id="addButton"
				label="{Message.get('global.add')}" 
				buttonMode="true" 
				icon="{Images.ADD}" 
				labelPlacement="left" 
				useHandCursor="true"
				visible="{Application.activeRecordEditable}"
				includeInLayout="{Application.activeRecordEditable}"
				/>
		</s:VGroup>
			
	</s:BorderContainer>
	
</detail:AttributeFormItem>
