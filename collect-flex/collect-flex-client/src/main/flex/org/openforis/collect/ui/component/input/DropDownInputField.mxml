<?xml version="1.0" encoding="utf-8"?>
<input:InputField xmlns:fx="http://ns.adobe.com/mxml/2009" 
				  xmlns:s="library://ns.adobe.com/flex/spark" 
				  xmlns:mx="library://ns.adobe.com/flex/mx" 
				  xmlns:input="org.openforis.collect.ui.component.input.*" 
				  xmlns:graphics="org.openforis.collect.ui.skin.graphics.*" 
				  >
	
	<input:layout>
		<s:BasicLayout />
	</input:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.core.UIComponent;
			
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.presenter.DropDownInputFieldPresenter;
			
			private var _dataProvider:IList;
			private var _internalDataProvider:IList;
			private var _labelFunction:Function;
			private var _dataField:String;
			private var _defaultValue:String;
			private var _prompt:String = Message.get("global.dropDownPrompt");
			
			override protected function initPresenter():void {
				presenter = new DropDownInputFieldPresenter(this);
			}
			
			override public function set hasRemarks(value:Boolean):void {
				remarksPresentIcon.visible = value;
			}
			
			override public function get validationStateDisplay():UIComponent {
				return this;
			}
			
			override public function isEmpty():Boolean {
				return dropDownList.selectedItem == null;
			}
			
			[Bindable]
			public function get dataProvider():IList {
				return _dataProvider;
			}

			public function set dataProvider(value:IList):void {
				_dataProvider = value;
			}
			
			[Bindable]
			public function get labelFunction():Function {
				return _labelFunction;
			}

			public function set labelFunction(value:Function):void {
				_labelFunction = value;
			}

			[Bindable]
			public function get dataField():String {
				return _dataField;
			}

			public function set dataField(value:String):void {
				_dataField = value;
			}

			[Bindable]
			public function get internalDataProvider():IList {
				return _internalDataProvider;
			}

			public function set internalDataProvider(value:IList):void {
				_internalDataProvider = value;
			}

			[Bindable]
			public function get prompt():String {
				return _prompt;
			}

			public function set prompt(value:String):void {
				_prompt = value;
			}

			[Bindable]
			public function get defaultValue():String {
				return _defaultValue;
			}
			
			public function set defaultValue(value:String):void {
				_defaultValue = value;
			}
			
			override public function set editable(value:Boolean):void {
				super.editable = value;
				dropDownList.enabled = value;
			}

		]]>
	</fx:Script>
	
	<s:DropDownList id="dropDownList" width="100%" 
					dataProvider="{internalDataProvider}" 
					labelFunction="{labelFunction}"
					prompt="{prompt}"
					>
		<s:layout>
			<s:VerticalLayout gap="0"
							  variableRowHeight="true"
							  horizontalAlign="justify"
							  requestedMaxRowCount="8" />
		</s:layout>
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer>
					<fx:Script>
						<![CDATA[
							import org.openforis.collect.ui.Images;
							import org.openforis.collect.util.ObjectUtil;
							
							[Bindable]
							private var separatorVisible:Boolean;
							
							override public function set data(value:Object):void {
								super.data = value;
								separatorVisible = ObjectUtil.getValue(value, "separator");
							}
						]]>
					</fx:Script>
					
					<s:states>
						<s:State name="normal" />
						<s:State name="hovered" />
						<s:State name="selected" />
					</s:states>
					
					<s:Group top="8" left="2" right="2" bottom="2" width="100%" height="100%">
						<s:Label id="labelDisplay" />
					</s:Group>
					
					<s:Rect left="0" right="0" top="0" height="1" visible="{separatorVisible}" >
						<s:fill>
							<s:BitmapFill source="{Images.DASH}"
										  fillMode="repeat" />
						</s:fill>
					</s:Rect>
					
				</s:ItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:DropDownList>
	
	<graphics:RemarksPresentIcon id="remarksPresentIcon"
								 top="0"
								 right="0"
								 visible="false"
								 />
	
</input:InputField>
